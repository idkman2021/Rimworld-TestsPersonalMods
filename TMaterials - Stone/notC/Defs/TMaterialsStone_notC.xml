<?xml version="1.0" encoding="utf-8"?>
<Defs>


  <!--  <ThingDef ParentName="ResourceBase" Name="StoneBlocksBase" Abstract="True">
    <description>Blocks of stone. Mostly useful for building long-lasting, simple structures.</description>
    <graphicData>
      <texPath>Things/Item/Resource/StoneBlocks</texPath>
      <graphicClass>Graphic_StackCount</graphicClass>
    </graphicData>
    <soundInteract>Stone_Drop</soundInteract>
    <soundDrop>Stone_Drop</soundDrop>
    <useHitPoints>false</useHitPoints>
    <tradeability>Buyable</tradeability>
    <statBases>
      <MaxHitPoints>200</MaxHitPoints>
      <MarketValue>0.9</MarketValue>
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier>
      <BluntDamageMultiplier>1.0</BluntDamageMultiplier>
      <Beauty>-12</Beauty>
      <ConstructionSpeedFactor>0.8</ConstructionSpeedFactor>
    </statBases>
    <thingCategories>
      <li>StoneBlocks</li>
    </thingCategories>
    <burnableByRecipe>false</burnableByRecipe>
    <minRewardCount>10</minRewardCount>
    <stuffProps>
      <categories>
        <li>Stony</li>
      </categories>
      <commonality>0.20</commonality>
      <appearance>Bricks</appearance>
      <statOffsets>
        <WorkToBuild>140</WorkToBuild>
      </statOffsets>
      <statFactors>
        <MarketValue>0.4</MarketValue>
        <MaxHitPoints>1.8</MaxHitPoints>
        <Flammability>0</Flammability>
        <WorkToBuild>6.0</WorkToBuild>
        <WorkToMake>1.3</WorkToMake>
        <DoorOpenSpeed>0.45</DoorOpenSpeed>
        <BedRestEffectiveness>0.9</BedRestEffectiveness>
        <MeleeWeapon_CooldownMultiplier>1.30</MeleeWeapon_CooldownMultiplier>
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
    <terrainAffordanceNeeded>Heavy</terrainAffordanceNeeded>
    </ThingDef> -->


  <!--                              diorite                          -->
  <ThingDef ParentName="StoneBlocksBase">
    <defName>carnap_blocksdiorite</defName>
    <label>diorite blocks</label>
    <description>Blocks of solid diorite.</description>
    <graphicData>
      <color>(219,219,219)</color>
    </graphicData>
    <statBases>
      <MarketValue>0.9</MarketValue> <!-- base 0.9 -->
      <Mass>1.35</Mass> <!-- sandstone 1 granite 1.25 limestone 1.1 slate 0.9 marble 1.25 --> <!-- 1 = 2300, 1.1 - 1.25 = 2700,  -->
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier> <!-- base 0.6 sandstone 0.5 granite 0.65 -->
      <!-- <BluntDamageMultiplier></BluntDamageMultiplier> -->
      <!-- base 1.0 -->
      <!-- <Beauty>value</Beauty> -->
      <!-- base -12 -->
    </statBases>
    <stuffProps>
      <commonality>0.05</commonality> <!-- base 0.2 -->
      <color>(219,219,219)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>diorite</stuffAdjective>
      <statFactors>
        <MarketValue>0.4</MarketValue> <!-- base 0.4 -->
        <Beauty>1.15</Beauty> <!-- sandstone 1.1 slate 1.1 marble 1.35 -->
        <MaxHitPoints>1.7</MaxHitPoints> <!-- base 1.8 sandstone 1.4 granite 1.7 limestone 1.55 slate 1.3 marble 1.2 -->
        <WorkToBuild>5</WorkToBuild> <!-- base 6 sandstone 5 mable 5.5-->
        <WorkToMake>1.3</WorkToMake> <!-- base 1.3 sandstone 1.1 marble 1.15-->
        <Flammability>0</Flammability> <!-- base 0 -->
        <MeleeWeapon_CooldownMultiplier>1.4</MeleeWeapon_CooldownMultiplier> <!-- base 1.3 -->
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>


  <RecipeDef ParentName="MakeStoneBlocksBase">
    <defName>carnap_makedioriteblocks</defName>
    <label>make diorite blocks</label>
    <description>Cuts diorite chunks into usable blocks.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkdiorite</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkdiorite</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <carnap_blocksdiorite>20</carnap_blocksdiorite>
    </products>
  </RecipeDef>

  <ThingDef ParentName="ChunkRockBase">
    <defName>carnap_chunkdiorite</defName>
    <label>diorite chunk</label>
    <graphicData>
      <color>(219,219,219)</color>
    </graphicData>
    <statBases>
      <Mass>25</Mass>
    </statBases>
    <soundDrop>ChunkRock_Drop</soundDrop>
    <butcherProducts>
      <carnap_blocksdiorite>20</carnap_blocksdiorite>
    </butcherProducts>
  </ThingDef>

  <ThingDef ParentName="carnap_dioriteBase" Name="carnap_smootheddioriteBase">
    <defName>carnap_smootheddiorite</defName>
    <label>smoothed diorite</label>
    <description>A rock formed by slow cooling of magma. It has been polished to a flat, smooth surface.</description>
    <graphicData>
      <texPath>Things/Building/Linked/RockSmooth_Atlas</texPath>
    </graphicData>
    <statBases>
      <Beauty>-1</Beauty>
      <MarketValue>21</MarketValue>
    </statBases>
    <building>
      <isNaturalRock>false</isNaturalRock>
      <canBuildNonEdificesUnder>true</canBuildNonEdificesUnder>
      <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
      <smoothedThing />
    </building>
    <saveCompressible>false</saveCompressible>
    <repairEffect>Repair</repairEffect>
  </ThingDef>

  <ThingDef ParentName="UglyRockBase" Name="carnap_dioriteBase">
    <defName>carnap_diorite</defName>
    <label>diorite</label>
    <description>A rock formed by slow cooling of magma.</description>
    <graphicData>
      <color>(219,219,219)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>900</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <mineableThing>carnap_chunkdiorite</mineableThing>
      <mineableDropChance>0.25</mineableDropChance>
      <smoothedThing>carnap_smootheddiorite</smoothedThing>
    </building>
  </ThingDef>


  <RecipeDef ParentName="EM_MakeCobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Make_Cobblestonediorite</defName>
    <label>make diorite cobblestone</label>
    <description>Smashes diorite chunks into cobblestone.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkdiorite</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkdiorite</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <EM_Cobblestonediorite>35</EM_Cobblestonediorite>
    </products>
  </RecipeDef>

  <ThingDef ParentName="EM_CobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Cobblestonediorite</defName>
    <label>diorite cobblestone</label>
    <description>diorite smashed down to cobblestone. A rock formed by slow cooling of magma.</description>
    <graphicData>
      <color>(219,219,219)</color>
    </graphicData>
    <statBases>
      <Mass>1.25</Mass>
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier>
    </statBases>
    <stuffProps>
      <color>(219,219,219)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>diorite</stuffAdjective>
      <statFactors>
        <MaxHitPoints>1.6</MaxHitPoints>
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>

  <!--                              gneiss                          -->
  <ThingDef ParentName="StoneBlocksBase">
    <defName>carnap_blocksgneiss</defName>
    <label>gneiss blocks</label>
    <description>Blocks of solid gneiss.</description>
    <graphicData>
      <color>(150, 142, 120)</color>
    </graphicData>
    <statBases>
      <MarketValue>0.9</MarketValue> <!-- base 0.9 -->
      <Mass>1.2</Mass> <!-- sandstone 1 granite 1.25 limestone 1.1 slate 0.9 marble 1.25 --> <!-- 1 = 2300, 1.1 - 1.25 = 2700,  -->
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier> <!-- base 0.6 sandstone 0.5 granite 0.65 -->
      <!-- <BluntDamageMultiplier></BluntDamageMultiplier> -->
      <!-- base 1.0 -->
      <!-- <Beauty>value</Beauty> -->
      <!-- base -12 -->
    </statBases>
    <stuffProps>
      <commonality>0.05</commonality> <!-- base 0.2 -->
      <color>(150, 142, 120)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>gneiss</stuffAdjective>
      <statFactors>
        <MarketValue>0.4</MarketValue> <!-- base 0.4 -->
        <MaxHitPoints>1.6</MaxHitPoints> <!-- base 1.8 sandstone 1.4 granite 1.7 limestone 1.55 slate 1.3 marble 1.2 -->
        <WorkToBuild>6</WorkToBuild> <!-- base 6 sandstone 5 mable 5.5-->
        <WorkToMake>1.3</WorkToMake> <!-- base 1.3 sandstone 1.1 marble 1.15-->
        <Flammability>0</Flammability> <!-- base 0 -->
        <MeleeWeapon_CooldownMultiplier>1.3</MeleeWeapon_CooldownMultiplier> <!-- base 1.3 -->
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>

  <RecipeDef ParentName="MakeStoneBlocksBase">
    <defName>carnap_makegneissblocks</defName>
    <label>make gneiss blocks</label>
    <description>Cuts gneiss chunks into usable blocks.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkgneiss</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkgneiss</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <carnap_blocksgneiss>20</carnap_blocksgneiss>
    </products>
  </RecipeDef>

  <ThingDef ParentName="ChunkRockBase">
    <defName>carnap_chunkgneiss</defName>
    <label>gneiss chunk</label>
    <graphicData>
      <color>(150, 142, 120)</color>
    </graphicData>
    <statBases>
      <Mass>25</Mass>
    </statBases>
    <soundDrop>ChunkRock_Drop</soundDrop>
    <butcherProducts>
      <carnap_blocksgneiss>20</carnap_blocksgneiss>
    </butcherProducts>
  </ThingDef>

  <ThingDef ParentName="carnap_gneissBase" Name="carnap_smoothedgneissBase">
    <defName>carnap_smoothedgneiss</defName>
    <label>smoothed gneiss</label>
    <description>A common and widely distributed type of metamorphic rock. It has been polished to a flat, smooth surface.</description>
    <graphicData>
      <texPath>Things/Building/Linked/RockSmooth_Atlas</texPath>
    </graphicData>
    <statBases>
      <Beauty>-1</Beauty>
      <MarketValue>21</MarketValue>
    </statBases>
    <building>
      <isNaturalRock>false</isNaturalRock>
      <canBuildNonEdificesUnder>true</canBuildNonEdificesUnder>
      <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
      <smoothedThing />
    </building>
    <saveCompressible>false</saveCompressible>
    <repairEffect>Repair</repairEffect>
  </ThingDef>

  <ThingDef ParentName="UglyRockBase" Name="carnap_gneissBase">
    <defName>carnap_gneiss</defName>
    <label>gneiss</label>
    <description>A common and widely distributed type of metamorphic rock.</description>
    <graphicData>
      <color>(150, 142, 120)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>700</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <mineableThing>carnap_chunkgneiss</mineableThing>
      <mineableDropChance>0.25</mineableDropChance>
      <smoothedThing>carnap_smoothedgneiss</smoothedThing>
    </building>
  </ThingDef>


  <RecipeDef ParentName="EM_MakeCobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Make_Cobblestonegneiss</defName>
    <label>make gneiss cobblestone</label>
    <description>Smashes gneiss chunks into cobblestone.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkgneiss</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkgneiss</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <EM_Cobblestonegneiss>35</EM_Cobblestonegneiss>
    </products>
  </RecipeDef>

  <ThingDef ParentName="EM_CobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Cobblestonegneiss</defName>
    <label>gneiss cobblestone</label>
    <description>gneiss smashed down to cobblestone. A common and widely distributed type of metamorphic rock.</description>
    <graphicData>
      <color>(150, 142, 120)</color>
    </graphicData>
    <statBases>
      <Mass>1.25</Mass>
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier>
    </statBases>
    <stuffProps>
      <color>(150, 142, 120)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>gneiss</stuffAdjective>
      <statFactors>
        <MaxHitPoints>1.5</MaxHitPoints>
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>


  <!--                              Claystone                          -->
  <ThingDef ParentName="StoneBlocksBase">
    <defName>carnap_blocksclaystone</defName>
    <label>claystone blocks</label>
    <description>Blocks of solid claystone composed primarily of clay-sized particles.</description>
    <graphicData>
      <color>(183,175,165)</color>
    </graphicData>
    <statBases>
      <MarketValue>0.9</MarketValue> <!-- base 0.9 -->
      <Mass>1.15</Mass> <!-- sandstone 1 granite 1.25 limestone 1.1 slate 0.9 marble 1.25 --> <!-- 1 = 2300, 1.1 - 1.25 = 2700,  -->
      <SharpDamageMultiplier>0.5</SharpDamageMultiplier> <!-- base 0.6 sandstone 0.5 granite 0.65 -->
      <!-- <BluntDamageMultiplier></BluntDamageMultiplier> -->
      <!-- base 1.0 -->
      <!-- <Beauty>value</Beauty> -->
      <!-- base -12 -->
    </statBases>
    <stuffProps>
      <commonality>0.05</commonality> <!-- base 0.2 -->
      <color>(183,175,165)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>claystone</stuffAdjective>
      <statFactors>
        <MarketValue>0.4</MarketValue> <!-- base 0.4 -->
        <MaxHitPoints>1.3</MaxHitPoints> <!-- base 1.8 sandstone 1.4 granite 1.7 limestone 1.55 slate 1.3 marble 1.2 -->
        <WorkToBuild>4</WorkToBuild> <!-- base 6 sandstone 5 mable 5.5-->
        <WorkToMake>1.1</WorkToMake> <!-- base 1.3 sandstone 1.1 marble 1.15-->
        <Flammability>0</Flammability> <!-- base 0 -->
        <MeleeWeapon_CooldownMultiplier>1.3</MeleeWeapon_CooldownMultiplier> <!-- base 1.3 -->
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>


  <RecipeDef ParentName="MakeStoneBlocksBase">
    <defName>carnap_makeclaystoneblocks</defName>
    <label>make claystone blocks</label>
    <description>Cuts claystone chunks into usable blocks.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkclaystone</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkclaystone</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <carnap_blocksclaystone>20</carnap_blocksclaystone>
    </products>
  </RecipeDef>

  <ThingDef ParentName="ChunkRockBase">
    <defName>carnap_chunkclaystone</defName>
    <label>claystone chunk</label>
    <graphicData>
      <color>(183,175,165)</color>
    </graphicData>
    <statBases>
      <Mass>25</Mass>
    </statBases>
    <soundDrop>ChunkRock_Drop</soundDrop>
    <butcherProducts>
      <carnap_blocksclaystone>20</carnap_blocksclaystone>
    </butcherProducts>
  </ThingDef>

  <ThingDef ParentName="carnap_claystoneBase" Name="carnap_smoothedclaystoneBase">
    <defName>carnap_smoothedclaystone</defName>
    <label>smoothed claystone</label>
    <description>A rock composed primarily of clay-sized particles. It has been polished to a flat, smooth surface.</description>
    <graphicData>
      <texPath>Things/Building/Linked/RockSmooth_Atlas</texPath>
    </graphicData>
    <statBases>
      <Beauty>-1</Beauty>
      <MarketValue>21</MarketValue>
    </statBases>
    <building>
      <isNaturalRock>false</isNaturalRock>
      <canBuildNonEdificesUnder>true</canBuildNonEdificesUnder>
      <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
      <smoothedThing />
    </building>
    <saveCompressible>false</saveCompressible>
    <repairEffect>Repair</repairEffect>
  </ThingDef>

  <ThingDef ParentName="UglyRockBase" Name="carnap_claystoneBase">
    <defName>carnap_claystone</defName>
    <label>claystone</label>
    <description>A rock composed primarily of clay-sized particles.</description>
    <graphicData>
      <color>(183,175,165)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>350</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <mineableThing>carnap_chunkclaystone</mineableThing>
      <mineableDropChance>0.25</mineableDropChance>
      <smoothedThing>carnap_smoothedclaystone</smoothedThing>
    </building>
  </ThingDef>

  <RecipeDef ParentName="EM_MakeCobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Make_Cobblestoneclaystone</defName>
    <label>make claystone cobblestone</label>
    <description>Smashes claystone chunks into cobblestone.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkclaystone</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkclaystone</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <EM_Cobblestoneclaystone>35</EM_Cobblestoneclaystone>
    </products>
  </RecipeDef>

  <ThingDef ParentName="EM_CobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Cobblestoneclaystone</defName>
    <label>claystone cobblestone</label>
    <description>claystone smashed down to cobblestone. A rock composed primarily of clay-sized particles.</description>
    <graphicData>
      <color>(183,175,165)</color>
    </graphicData>
    <statBases>
      <Mass>1.25</Mass>
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier>
    </statBases>
    <stuffProps>
      <color>(183,175,165)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>claystone</stuffAdjective>
      <statFactors>
        <MaxHitPoints>1.15</MaxHitPoints>
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>


  <!--                              pegmatite                          -->
  <ThingDef ParentName="StoneBlocksBase">
    <defName>carnap_blockspegmatite</defName>
    <label>pegmatite blocks</label>
    <description>Blocks of solid pegmatite.</description>
    <graphicData>
      <color>(136,133,122)</color>
    </graphicData>
    <statBases>
      <Mass>1.25</Mass>
    </statBases>
    <stuffProps>
      <commonality>0.05</commonality>
      <color>(136,133,122)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>pegmatite</stuffAdjective>
      <statFactors>
        <MaxHitPoints>1.7</MaxHitPoints>
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>


  <RecipeDef ParentName="MakeStoneBlocksBase">
    <defName>carnap_makepegmatiteblocks</defName>
    <label>make pegmatite blocks</label>
    <description>Cuts pegmatite chunks into usable blocks.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkpegmatite</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkpegmatite</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <carnap_blockspegmatite>20</carnap_blockspegmatite>
    </products>
  </RecipeDef>

  <ThingDef ParentName="ChunkRockBase">
    <defName>carnap_chunkpegmatite</defName>
    <label>pegmatite chunk</label>
    <graphicData>
      <color>(136,133,122)</color>
    </graphicData>
    <statBases>
      <Mass>25</Mass>
    </statBases>
    <soundDrop>ChunkRock_Drop</soundDrop>
    <butcherProducts>
      <carnap_blockspegmatite>20</carnap_blockspegmatite>
    </butcherProducts>
  </ThingDef>

  <ThingDef ParentName="carnap_pegmatiteBase" Name="carnap_smoothedpegmatiteBase">
    <defName>carnap_smoothedpegmatite</defName>
    <label>smoothed pegmatite</label>
    <description>An igneous rock showing a very coarse texture. It has been polished to a flat, smooth surface.</description>
    <graphicData>
      <texPath>Things/Building/Linked/RockSmooth_Atlas</texPath>
    </graphicData>
    <statBases>
      <Beauty>-1</Beauty>
      <MarketValue>21</MarketValue>
    </statBases>
    <building>
      <isNaturalRock>false</isNaturalRock>
      <canBuildNonEdificesUnder>true</canBuildNonEdificesUnder>
      <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
      <smoothedThing />
    </building>
    <saveCompressible>false</saveCompressible>
    <repairEffect>Repair</repairEffect>
  </ThingDef>

  <ThingDef ParentName="UglyRockBase" Name="carnap_pegmatiteBase">
    <defName>carnap_pegmatite</defName>
    <label>pegmatite</label>
    <description>An igneous rock showing a very coarse texture.</description>
    <graphicData>
      <color>(136,133,122)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>900</MaxHitPoints>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <mineableThing>carnap_chunkpegmatite</mineableThing>
      <mineableDropChance>0.25</mineableDropChance>
      <smoothedThing>carnap_smoothedpegmatite</smoothedThing>
    </building>
  </ThingDef>


  <RecipeDef ParentName="EM_MakeCobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Make_Cobblestonepegmatite</defName>
    <label>make pegmatite cobblestone</label>
    <description>Smashes pegmatite chunks into cobblestone.</description>
    <ingredients>
      <li>
        <filter>
          <thingDefs>
            <li>carnap_chunkpegmatite</li>
          </thingDefs>
        </filter>
        <count>1</count>
      </li>
    </ingredients>
    <fixedIngredientFilter>
      <thingDefs>
        <li>carnap_chunkpegmatite</li>
      </thingDefs>
    </fixedIngredientFilter>
    <products>
      <EM_Cobblestonepegmatite>35</EM_Cobblestonepegmatite>
    </products>
  </RecipeDef>

  <ThingDef ParentName="EM_CobblestoneBase" MayRequire="Argon.ExpandedMaterials.Stones">
    <defName>EM_Cobblestonepegmatite</defName>
    <label>pegmatite cobblestone</label>
    <description>pegmatite smashed down to cobblestone. An igneous rock showing a very coarse texture.</description>
    <graphicData>
      <color>(136,133,122)</color>
    </graphicData>
    <statBases>
      <Mass>1.25</Mass>
      <SharpDamageMultiplier>0.6</SharpDamageMultiplier>
    </statBases>
    <stuffProps>
      <color>(136,133,122)</color>
      <soundImpactStuff>BulletImpact_Ground</soundImpactStuff>
      <soundMeleeHitSharp>MeleeHit_Stone</soundMeleeHitSharp>
      <soundMeleeHitBlunt>MeleeHit_Stone</soundMeleeHitBlunt>
      <stuffAdjective>pegmatite</stuffAdjective>
      <statFactors>
        <MaxHitPoints>1.6</MaxHitPoints>
      </statFactors>
      <canSuggestUseDefaultStuff>true</canSuggestUseDefaultStuff>
    </stuffProps>
  </ThingDef>


</Defs>